import java.util.concurrent.Semaphore;
import java.util.ArrayList;

public class BarberShopSimulation {
    static final int WORKDAY_MINUTES = 24 * 60;
    static final int HAIRCUT_TIME_MINUTES = 60;
    static final int CLIENT_INTERVAL_MINUTES = 40;
    static final int PRICE = 600;

    static final Semaphore barbers = new Semaphore(4);

    static int totalClients = 0;
    static int rejectedClients = 0;
    static int queueFormedAtMinute = -1;

    public static void main(String[] args) throws InterruptedException {
        ArrayList<Thread> clientThreads = new ArrayList<>();

        for (int currentMinute = 0; currentMinute < WORKDAY_MINUTES; currentMinute += CLIENT_INTERVAL_MINUTES) {
            int arrivalTime = currentMinute;
            Thread client = new Thread(() -> serveClient(arrivalTime));
            client.start();
            clientThreads.add(client);
            Thread.sleep(CLIENT_INTERVAL_MINUTES); 
        }

        for (Thread t : clientThreads) {
            t.join();
        }

        System.out.println("\nüìä –û—Ç—á—ë—Ç:");
        System.out.println("–û–±—Å–ª—É–∂–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: " + totalClients);
        System.out.println("–û—Ç–∫–∞–∑–∞–Ω–æ (–æ—á–µ—Ä–µ–¥—å): " + rejectedClients);
        System.out.println("–í—ã—Ä—É—á–∫–∞ –∑–∞ —Å—É—Ç–∫–∏: " + (totalClients * PRICE) + " —Ä—É–±.");

        if (queueFormedAtMinute >= 0)
            System.out.println("–û—á–µ—Ä–µ–¥—å –Ω–∞—á–∞–ª–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ " + queueFormedAtMinute + " –º–∏–Ω—É—Ç");
        else
            System.out.println("–û—á–µ—Ä–µ–¥–∏ –Ω–µ –±—ã–ª–æ");
    }

    public static void serveClient(int minute) {
        boolean entered = barbers.tryAcquire();

        if (entered) {
            synchronized (BarberShopSimulation.class) {
                totalClients++;
            }
            System.out.println("[" + minute + " –º–∏–Ω] –ö–ª–∏–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è");

            try {
                Thread.sleep(HAIRCUT_TIME_MINUTES);
            } catch (InterruptedException ignored) {}

            barbers.release();
        } else {
            synchronized (BarberShopSimulation.class) {
                rejectedClients++;
                if (queueFormedAtMinute == -1)
                    queueFormedAtMinute = minute;
            }
            System.out.println("[" + minute + " –º–∏–Ω] –í—Å–µ –º–∞—Å—Ç–µ—Ä–∞ –∑–∞–Ω—è—Ç—ã. –ö–ª–∏–µ–Ω—Ç —É—à—ë–ª.");
        }
    }
}
